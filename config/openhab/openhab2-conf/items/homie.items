Group homie "Homie"


// ***** Termostat w kuchni

Group g_HK_Downstairs_TSTAT "Downstairs Thermostat" [ "Thermostat", "Celsius" ]
Number HK_Downstairs_Mode "Downstairs Heating/Cooling Mode" (g_HK_Downstairs_TSTAT) [ "homekit:HeatingCoolingMode" ]

String KuchniaTermostat_name "Homie name: [%s]" { mqtt="<[nasmqtt:homie/5ccf7f2c12d1/$name:state:REGEX((.*))]" }
Switch KuchniaTermostat_online "Homie online: [%s]" (gReachable) { mqtt="<[nasmqtt:homie/5ccf7f2c12d1/$online:state:JS(homie-tf.js)"}

Switch  KuchniaTermostat_switch "Heating" <switch>  (GraphTempThermo) {
		mqtt=">[nasmqtt:homie/5ccf7f2c12d1/heating/on/set:command:ON:true],
			  >[nasmqtt:homie/5ccf7f2c12d1/heating/on/set:command:OFF:false],
  			  <[nasmqtt:homie/5ccf7f2c12d1/heating/on:state:JS(homie-tf.js)]
  			  "
}

Number	KuchniaTermostat_tempReadout	"Readout temperature [%.1f °C]"	<temperature> (GraphTempThermo, g_HK_Downstairs_TSTAT) [ "CurrentTemperature" ] {
	mqtt="<[nasmqtt:homie/5ccf7f2c12d1/currentTemp/degrees:state:default]"
}

Number	KuchniaTermostat_tempDesired	"Desired temperature [%.1f °C]"	<temperature> (GraphTempThermo, g_HK_Downstairs_TSTAT) [ "TargetTemperature" ] {
	mqtt="
		<[nasmqtt:homie/5ccf7f2c12d1/desiredTemp/degrees:state:default],
 		>[nasmqtt:homie/5ccf7f2c12d1/desiredTemp/degrees/set:command:*:default]

		"
}

Number KuchniaTermostat_setting_temperatureInterval	"Interval for readout of temperature: [%s]" {
	mqtt="<[nasmqtt:homie/5ccf7f2c12d1/$implementation/config:state:JSONPATH($.settings.temperatureInterval)],
		  >[nasmqtt:homie/5ccf7f2c12d1/$implementation/config/set:command:*:JS(homie-settings-tempeval.js)]
	"
}

Number KuchniaTermostat_setting_histeresis	"Histeresis of temperature sensor: [%s]" {
	mqtt="<[nasmqtt:homie/5ccf7f2c12d1/$implementation/config:state:JSONPATH($.settings.histeresis)],
		  >[nasmqtt:homie/5ccf7f2c12d1/$implementation/config/set:command:*:JS(homie-settings-histeresis.js)]
	"
}

// ***** Termostat w kuchni ************** END

String sonoffcef_name "Device name: [%s]" { mqtt="<[nasmqtt:homie/ecfabc065cef/$name:state:REGEX((.*))]" }
Switch sonoffcef_online "Device online: [%s]" (gReachable) { mqtt="<[nasmqtt:homie/ecfabc065cef/$online:state:JS(homie-tf.js)"}

Switch  sonoffcef_center_switch "relay" <switch> (Group1,Group2) {
		mqtt=">[nasmqtt:homie/ecfabc065cef/center/on/set:command:ON:true],
			  >[nasmqtt:homie/ecfabc065cef/center/on/set:command:OFF:false],
  			  <[nasmqtt:homie/ecfabc065cef/center/on:state:JS(homie-tf.js)]
  			  "
}

// ***** Lampka w sypialni

	String SypialniaLampka_name "Device name: [%s]" { mqtt="<[nasmqtt:homie/60019466aacf/$name:state:REGEX((.*))]" }
	Switch SypialniaLampka_online "Device online: [%s]" (gReachable) { mqtt="<[nasmqtt:homie/60019466aacf/$online:state:JS(homie-tf.js)"}
	Switch  SypialniaLampka "Night lamp" <switch> (Group1,Group2) ["Switchable"] {
			mqtt=">[nasmqtt:homie/60019466aacf/center/on/set:command:ON:true],
				  >[nasmqtt:homie/60019466aacf/center/on/set:command:OFF:false],
	  			  <[nasmqtt:homie/60019466aacf/center/on:state:JS(homie-tf.js)]
	  			  "
	}
	//homie/60019466aacf/b1/event
	String SypialniaLampka_address "60019466aacf"
	String SypialniaLampkaButton1 "Night lamp button 1: [%s]" {
		mqtt="<[nasmqtt:homie/60019466aacf/b1/event:state:default]"
	}

// ***** Lampka w sypialni ************** END



// ***** Roleta w sypialni

	String SypialniaRoleta_name "Device name: [%s]" { mqtt="<[nasmqtt:homie/dc4f22107447/$name:state:REGEX((.*))]" }
	Switch SypialniaRoleta_online "Device online: [%s]" (gReachable) { mqtt="<[nasmqtt:homie/dc4f22107447/$online:state:JS(homie-tf.js)"}
	
	Rollershutter SypialniaRoleta "blinds" (Group1, Group2) {
		mqtt="
			>[nasmqtt:homie/dc4f22107447/blinds1/position/set:command:*:default],
			<[nasmqtt:homie/dc4f22107447/blinds1/position:state:default]
			"
	}
	
	Number SypialniaRoleta_setting_closingTime	"Closing time (in ms) of the shutters: [%s]" {
		mqtt="<[nasmqtt:homie/dc4f22107447/$implementation/config:state:JSONPATH($.settings.closingTime)],
			  >[nasmqtt:homie/dc4f22107447/$implementation/config/set:command:*:JS(homie-settings-closingTime.js)]
		"
	}
// ***** Roleta w sypialni ************** END

// ***** Zawor w piwnicy
	String PiwnicaZawor_name "Zawor 3dr kotlownia name: [%s]" { mqtt="<[nasmqtt:homie/5ccf7f9f342f/$name:state:REGEX((.*))]" }
	Switch PiwnicaZawor_online "Zawor 3dr kotlownia online: [%s]" (gReachable) { mqtt="<[nasmqtt:homie/5ccf7f9f342f/$online:state:JS(homie-tf.js)"}
	Rollershutter PiwnicaZawor_blinds "Heating valve" (Group1, Group2) [ "Lighting" ] {
		mqtt="
			>[nasmqtt:homie/5ccf7f9f342f/blinds1/position/set:command:*:default],
			<[nasmqtt:homie/5ccf7f9f342f/blinds1/position:state:default]
			"
	}
	String PiwnicaZawor_address "5ccf7f9f342f"

// ***** Zawor w piwnicy ************** END


// ***** 1pietro_wykusz_biurko::dc4f22107450 ************** BEGIN *** .items

  String 1pietro_wykusz_biurko_name "Device name: [%s]" (gNames) { mqtt="<[nasmqtt:homie/dc4f22107450/$name:state:REGEX((.*))]" }
  Switch 1pietro_wykusz_biurko_online "Device online: [%s]" (gReachable) { mqtt="<[nasmqtt:homie/dc4f22107450/$online:state:JS(homie-tf.js)"}
  String 1pietro_wykusz_biurko_but1 "1pietro_wykusz_biurko->button->but1" (gbutton, gHomieSensors) {
    mqtt="<[nasmqtt:homie/dc4f22107450/but1/event:state:default]"
  }
  String 1pietro_wykusz_biurko_but2 "1pietro_wykusz_biurko->button->but2" (gbutton, gHomieSensors) {
    mqtt="<[nasmqtt:homie/dc4f22107450/but2/event:state:default]"
  }
  String 1pietro_wykusz_biurko_but3 "1pietro_wykusz_biurko->button->but3" (gbutton, gHomieSensors) {
    mqtt="<[nasmqtt:homie/dc4f22107450/but3/event:state:default]"
  }
  //!!! UNKNOWN SENSOR TYPE: switch YOU ARE ON YOUR OWN
  String 1pietro_wykusz_biurko_lewy "1pietro_wykusz_biurko->switch->lewy" (gswitch, gHomieSensors) {
    mqtt="<[nasmqtt:homie/dc4f22107450/lewy/event:state:default]"
  }
  //!!! UNKNOWN SENSOR TYPE: switch YOU ARE ON YOUR OWN
  String 1pietro_wykusz_biurko_prawy "1pietro_wykusz_biurko->switch->prawy" (gswitch, gHomieSensors) {
    mqtt="<[nasmqtt:homie/dc4f22107450/prawy/event:state:default]"
  }
  Rollershutter 1pietro_wykusz_biurko_roleta1 "1pietro_wykusz_biurko->blinds->roleta1" (gblinds, gHomieSensors) [ "Lighting" ] {
    mqtt="
      >[nasmqtt:homie/dc4f22107450/roleta1/position/set:command:*:default],
      <[nasmqtt:homie/dc4f22107450/roleta1/position:state:default]
      "
  }
      Number 1pietro_wykusz_biurko_setting_courseTimeDOWN "1pietro_wykusz_biurko->settings->courseTimeDOWN: [%s]" (gHomieSettings) {
        mqtt="
            <[nasmqtt:homie/dc4f22107450/$implementation/config:state:JSONPATH($.settings.courseTimeDOWN)],
            >[nasmqtt:homie/dc4f22107450/$implementation/config/set:command:*:JS(homie-settings-courseTimeDOWN.js)]
        "
      }
    /*********** TODO for U:
    cat >> /etc/openhab2/transform/homie-settings-courseTimeDOWN.js
    result = '{"settings":{"courseTimeDOWN":' + input + '}}';
    ************/

      Number 1pietro_wykusz_biurko_setting_courseTimeUP "1pietro_wykusz_biurko->settings->courseTimeUP: [%s]" (gHomieSettings) {
        mqtt="
            <[nasmqtt:homie/dc4f22107450/$implementation/config:state:JSONPATH($.settings.courseTimeUP)],
            >[nasmqtt:homie/dc4f22107450/$implementation/config/set:command:*:JS(homie-settings-courseTimeUP.js)]
        "
      }
    /*********** TODO for U:
    cat >> /etc/openhab2/transform/homie-settings-courseTimeUP.js
    result = '{"settings":{"courseTimeUP":' + input + '}}';
    ************/

      String 1pietro_wykusz_biurko_setting_reverseRelays "1pietro_wykusz_biurko->settings->reverseRelays?" (gHomieSettings) {
        mqtt="
            <[nasmqtt:homie/dc4f22107450/$implementation/config:state:JS(homie-settings-reverseRelays-get.js)],
            >[nasmqtt:homie/dc4f22107450/$implementation/config/set:command:*:JS(homie-settings-reverseRelays.js)]
        "
      }
    /*********** TODO for U:
    cat >> /etc/openhab2/transform/homie-settings-reverseRelays.js
    result = '{"settings":{"reverseRelays":' + ((input == "ON") ? "true" : "false") + '}}';

    cat >> /etc/openhab2/transform/homie-settings-reverseRelays-get.js
    result = ((JSON.parse(input)["settings"]["reverseRelays"]) == true ? "ON" : "OFF");
    ************/


// ***** 1pietro_wykusz_biurko::dc4f22107450 ************** END *** .items

